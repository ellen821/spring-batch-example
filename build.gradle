// build script 라이브러리 클래스패스 추가.
buildscript {
    ext {
        domainName = "onstyle-example-batch"
        // java version
        javaVersion = JavaVersion.VERSION_17
        // Library 버전.
        projectLibraryVersion = "0.0.1.RELEASE"
        // onstyle-framework include 버전 정의.
        onStyleFrameworkVersion = "1.0.0.BUILD-SNAPSHOT"
        onStyleStarterVersion = "1.0.0.BUILD-SNAPSHOT"
        // springBoot 버전 정의.
        springBootVersion = '2.6.5'
        // lombok version
        lombokVersion = "1.18.22"
    }
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'idea'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

wrapper {
    gradleVersion = "7.4.1"
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

allprojects {
    group "com.cjonstyle.${domainName}"
    idea {
        module {
            inheritOutputDirs = false
        }
    }
}

sourceCompatibility = "${javaVersion}"
targetCompatibility = "${javaVersion}"

// compile encoding 설정.
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

configurations {
    providedRuntime
}

configurations.all {
    all*.exclude group: 'org.apache.logging.log4j'
    // 변하는 모듈(Changing Module)을 캐시하지 않음
    resolutionStrategy.cacheChangingModulesFor 0, "seconds"
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}")

//    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    implementation("org.springframework.boot:spring-boot-starter-batch:${springBootVersion}")
    implementation 'co.elastic.clients:elasticsearch-java:8.1.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2.2'
    implementation 'jakarta.json:jakarta.json-api:2.0.1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.batch:spring-batch-test")
}

repositories {
    mavenCentral()
}

tasks.named('test') {
    useJUnitPlatform()
}
